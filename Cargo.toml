[workspace]
members = [
        "breakpad-symbols",
        "minidump",
        "minidump-common",
        "minidump-processor",
        "minidump-stackwalk",
        "minidump-synth",
        "minidump-unwind",
]
exclude = [
    "testdata/*",
]
resolver = "2"

[workspace.package]
license = "MIT"
homepage = "https://github.com/rust-minidump/rust-minidump"
repository = "https://github.com/rust-minidump/rust-minidump"
version = "0.24.1"

[workspace.dependencies]
breakpad-symbols = { version = "0.24.1", path = "breakpad-symbols" }
minidump = { version = "0.24.1", path = "minidump" }
minidump-common = { version = "0.24.1", path = "minidump-common" }
minidump-processor = { version = "0.24.1", path = "minidump-processor" }
minidump-synth = { version = "0.24.1", path = "minidump-synth" }
minidump-unwind = { version = "0.24.1", path = "minidump-unwind" }

arbitrary = "1"
async-trait = "0.1.52"
bitflags = "2"
cab = "0.6.0"
cachemap2 = "0.3.0"
circular = "0.3.0"
clap = "4.5.0"
ctor = "0.2"
debugid = "0.8.0"
doc-comment = "0.3.3"
encoding_rs = "0.8"
env_logger = "0.11.1"
framehop = "0.13"
futures-util = "0.3.25"
indicatif = "0.17.0"
insta = "1.20.0"
memmap2 = "0.9"
nom = "7"
num-derive = "0.4"
num-traits = "0.2"
object = { version = "0.36", default-features = false }
procfs-core = { version = "0.17", default-features = false }
range-map = "0.2"
reqwest = { version = "0.12", default-features = false }
scroll = "0.12.0"
serde = "1"
serde_json = "1.0"
smart-default = "0.7.0"
tempfile = "3.3.0"
test-assembler = "0.1.6"
thiserror = "2"
time = "0.3.34"
tokio = "1.12.0"
tracing = "0.1.34"
tracing-subscriber = "0.3.14"
uuid = "1.0.0"
wholesym = "0.8"
yaxpeax-x86 = "2"

[workspace.metadata.release]
shared-version = true
consolidate-commits = true
tag-name = "v{{version}}"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.22.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# Path that installers should place binaries in
install-path = "CARGO_HOME"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
